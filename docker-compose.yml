version: '3.8'

services:
  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: zabbix-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zabbix-net

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:${ZABBIX_VERSION}
    container_name: zabbix-server
    restart: unless-stopped
    ports:
      - "${ZABBIX_SERVER_PORT}:10051"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - zabbix-server-data:/var/lib/zabbix
    environment:
      - DB_SERVER_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - ZBX_TIMEOUT=${ZBX_TIMEOUT}
      - ZBX_JAVAGATEWAY_ENABLE=${ZBX_JAVAGATEWAY_ENABLE}
      - TZ=${TZ}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "zabbix_server", "-R", "ping_backend"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - zabbix-net

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:${ZABBIX_VERSION}
    container_name: zabbix-web
    restart: unless-stopped
    ports:
      - "${ZABBIX_WEB_PORT}:8080"
    environment:
      - DB_SERVER_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - ZBX_SERVER_HOST=${ZBX_SERVER_HOST}
      - TZ=${TZ}
    depends_on:
      - postgres
      - zabbix-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - zabbix-net

  zabbix-agent:
    image: zabbix/zabbix-agent2:${ZABBIX_VERSION}
    container_name: zabbix-agent
    restart: unless-stopped
    environment:
      - ZBX_SERVER_HOST=${ZBX_SERVER_HOST}
      - ZBX_HOSTNAME=zabbix-agent
      - TZ=${TZ}
    depends_on:
      - zabbix-server
    privileged: true
    networks:
      - zabbix-net

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS}
      - TZ=${TZ}
    depends_on:
      - zabbix-server
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - zabbix-net

volumes:
  postgres-data:
  zabbix-server-data:
  grafana-data:

networks:
  zabbix-net:
    driver: bridge
